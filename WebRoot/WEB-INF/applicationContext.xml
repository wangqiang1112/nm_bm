<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="
http://www.springframework.org/schema/beans
http://www.springframework.org/schema/beans/spring-beans-4.2.xsd
http://www.springframework.org/schema/context
http://www.springframework.org/schema/context/spring-context-4.2.xsd
http://www.springframework.org/schema/tx
http://www.springframework.org/schema/tx/spring-tx-4.2.xsd">

 <!-- JNDI 数据源修改 -->
	 <bean id="dataSource" 
        class="org.springframework.jndi.JndiObjectFactoryBean">
        <property name="jndiName">
             <value>java:comp/env/jdbc/secretManage</value>
        </property>
    </bean>	 
		
<!-- 开发数据源修改
	<bean id="dataSource"
		class="org.apache.commons.dbcp.BasicDataSource">
	<property name="driverClassName">
			<value>com.mysql.jdbc.Driver</value>
		</property>
		<property name="url">
			
			 <value>jdbc:mysql://192.168.1.201:3306/yw-nm</value>
		</property>
		<property name="username">
			<value>root</value>
		</property>
		<property name="password">
			<value>root</value>
		</property>
		<property name="testOnBorrow">
			<value>true</value>
		</property>
		<property name="maxActive">
			<value>200</value>
		</property>
		<property name="maxIdle">
			<value>30</value>
		</property>
		<property name="maxWait">
			<value>600</value>
		</property>
	</bean>
 -->
	<bean id="mySQLDialect" class="com.github.miemiedev.mybatis.paginator.dialect.MySQLDialect"></bean>
	<bean id="sqlSessionFactory" class="ns.sys.PackagesSqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="typeAliasesPackage" value="ns.major.*.dao.domain"/>
		<property name="plugins">
			<list>
				<bean class="com.github.miemiedev.mybatis.paginator.OffsetLimitInterceptor">
						<property name="dialect" ref="mySQLDialect"></property>
				</bean>
			</list>
		</property>
	</bean>
	
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="ns.major.*.dao.mapper"/>
		<property name="sqlSessionFactory" ref="sqlSessionFactory"/>
	</bean>
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>
	<tx:annotation-driven transaction-manager="transactionManager" />
	
	<bean id="baseTransactionProxy" class="org.springframework.transaction.interceptor.TransactionProxyFactoryBean" abstract="true">
        <property name="transactionManager" ref="transactionManager" />
        <property name="transactionAttributes">
            <props>
                <prop key="add*">PROPAGATION_REQUIRED</prop>
                <prop key="edit*">PROPAGATION_REQUIRED</prop>
                <prop key="remove*">PROPAGATION_REQUIRED</prop>
                <prop key="insert*">PROPAGATION_REQUIRED</prop>
                <prop key="update*">PROPAGATION_REQUIRED</prop>
                <prop key="del*">PROPAGATION_REQUIRED</prop>
                <prop key="query*">PROPAGATION_REQUIRED</prop>
                <prop key="get*">PROPAGATION_REQUIRED</prop>
                <prop key="main*">PROPAGATION_REQUIRED</prop>
                <prop key="index*">PROPAGATION_REQUIRED</prop>
                <prop key="cancel*">PROPAGATION_REQUIRED</prop>
                <prop key="*">readOnly</prop>
            </props>
        </property>
    </bean>
    
	<!-- 
	<bean id="exceptionInterceptor" class="ns.common.ExceptionHandler"></bean>
	<aop:config proxy-target-class="true">
		<aop:aspect id="logAspect" ref="exceptionInterceptor">
		 	<aop:after pointcut="execution(public * ns..action..*.*())" method="doAfter" />
			<aop:after-throwing method="afterThrowing" pointcut="execution(public * ns..action..*.*())" throwing="ex"/>
		</aop:aspect>
	</aop:config>
	 -->  
</beans>